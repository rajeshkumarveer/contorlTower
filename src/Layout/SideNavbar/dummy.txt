{newMenuList.map((item, index) => {
              //  {/********SubHeader**********/}
              if (item.subheader) {
                return (
                  <li key={item.subheader}>
                    <Typography
                      variant="subtitle2"
                      fontWeight="500"
                      sx={{ my: 2, mt: 4, opacity: "0.4" }}
                    >
                      {item.subheader}
                    </Typography>
                  </li>
                );
                // {/********If Sub Menu**********/}
                // {/* eslint no-else-return: "off" */}
              } else if (item.children) {
                return (
                  <React.Fragment key={item.title}>
                    <ListItem
                      button
                      component="li"
                      onClick={() => handleClick(index)}
                      selected={pathWithoutLastPart === item.href}
                      sx={{
                        mb: 1,
                        ...(pathWithoutLastPart === item.href && {
                          color: "white",
                          backgroundColor: (theme) =>
                            `${theme.palette.secondary.main}!important`,
                        }),
                      }}
                    >
                      <ListItemIcon
                        sx={{
                          ...(pathWithoutLastPart === item.href && {
                            color: "white",
                            fontSize: "18px",
                          }),
                        }}
                      >
                        {item.icon}
                      </ListItemIcon>
                      <ListItemText>{item.title}</ListItemText>
                      {index === open || pathWithoutLastPart === item.href ? (
                        <ExpandMoreIcon fontSize="16px" />
                      ) : (
                        <ChevronRightIcon fontSize="16px" />
                      )}
                    </ListItem>
                    <Collapse
                      in={index === open || pathWithoutLastPart === item.href}
                      timeout="auto"
                      unmountOnExit
                    >
                      <List component="li" disablePadding>
                        {item.children.map((child) => {
                          return (
                            <NextLink
                              key={child.title}
                              href={child.href}
                              onClick={onSidebarClose}
                            >
                              <ListItem
                                button
                                selected={pathDirect === child.href}
                                // sx={{
                                //   mb: 1,
                                //   ...(pathWithoutLastPart === child.href && {
                                //     color: "primary.main",
                                //     backgroundColor: "green !important",
                                //   }),
                                // }}
                                sx={{
                                  mb: 1,
                                  ...(pathDirect === child.href && {
                                    color: "white",
                                    backgroundColor: (theme) =>
                                      `${theme.palette.primary.main}!important`,
                                  }),
                                }}
                              >
                                <ListItemIcon
                                  // sx={{
                                  //   svg: { width: "14px", marginLeft: "3px" },
                                  //   ...(pathDirect === child.href && {
                                  //     color: "primary.main",
                                  //     fontSize: "18px",
                                  //   }),
                                  sx={{
                                    ...(pathDirect === child.href && {
                                      color: "white",
                                      fontSize: "18px",
                                    }),
                                    // }}
                                  }}
                                >
                                  {child.icon}
                                </ListItemIcon>
                                <ListItemText>{child.title}</ListItemText>
                              </ListItem>
                            </NextLink>
                          );
                        })}
                      </List>
                    </Collapse>
                  </React.Fragment>
                );
                //  {/********If Sub No Menu**********/}
              } else {
                return (
                  <List component="li" disablePadding key={item.title}>
                    <NextLink href={item.href}>
                      <ListItem
                        onClick={() => handleClick(index)}
                        button
                        selected={pathDirect === item.href}
                        sx={{
                          mb: 1,
                          ...(pathDirect === item.href && {
                            color: "white",
                            backgroundColor: (theme) =>
                              `${theme.palette.primary.main}!important`,
                          }),
                        }}
                      >
                        <ListItemIcon
                          sx={{
                            ...(pathDirect === item.href && { color: "white" }),
                            fontSize: "22px",
                          }}
                        >
                          {item.icon}
                        </ListItemIcon>
                        <ListItemText onClick={onSidebarClose}>
                          {item.title}
                        </ListItemText>
                      </ListItem>
                    </NextLink>
                  </List>
                );
              }
            })}




            {newMenuList.map((item, index) => {
              if (item.subheader) {
                return (
                  <li key={item.subheader}>
                    <Typography
                      variant="subtitle2"
                      fontWeight="500"
                      sx={{ my: 2, mt: 4, opacity: "0.4" }}
                    >
                      {item.subheader}
                    </Typography>
                  </li>
                );
              } else if (item.children) {
                return (
                  <React.Fragment key={item.title}>
                    <ListItem
                      button
                      component="li"
                      onClick={() => handleClick(index)}
                      selected={pathWithoutLastPart === item.href}
                      sx={{
                        mb: 1,
                        ...(pathWithoutLastPart === item.href && {
                          color: "white",
                          backgroundColor: (theme) =>
                            `${theme.palette.primary.main}!important`,
                        }),
                      }}
                    >
                      <ListItemIcon
                        sx={{
                          ...(pathWithoutLastPart === item.href && {
                            color: "white",
                            fontSize: "18px",
                          }),
                        }}
                      >
                        {item.icon}
                      </ListItemIcon>
                      <ListItemText>{item.title}</ListItemText>
                      {index === open || pathWithoutLastPart === item.href ? (
                        <ExpandMoreIcon fontSize="16px" />
                      ) : (
                        <ChevronRightIcon fontSize="16px" />
                      )}
                    </ListItem>
                    <Collapse
                      in={index === open || pathWithoutLastPart === item.href}
                      timeout="auto"
                      unmountOnExit
                    >
                      <List component="li" disablePadding>
                        {item.children.map((child) => {
                          return (
                            <NextLink
                              key={child.title}
                              href={child.href}
                              onClick={onSidebarClose}
                            >
                              <ListItem
                                button
                                selected={pathDirect === child.href}
                                sx={{
                                  mb: 1,
                                  ...(pathDirect === child.href && {
                                    color: "primary.main",
                                    backgroundColor: "transparent!important",
                                  }),
                                }}
                              >
                                <ListItemIcon
                                  sx={{
                                    svg: { width: "14px", marginLeft: "3px" },
                                    ...(pathDirect === child.href && {
                                      color: "primary.main",
                                      fontSize: "18px",
                                    }),
                                  }}
                                >
                                  {item.icon}
                                </ListItemIcon>
                                <ListItemText>{child.title}</ListItemText>
                              </ListItem>
                            </NextLink>
                          );
                        })}
                      </List>
                    </Collapse>
                  </React.Fragment>
                );
              } else {
                return (
                  <List component="li" disablePadding key={item.title}>
                    <NextLink href={item.href}>
                      <ListItem
                        onClick={() => handleClick(index)}
                        button
                        selected={pathDirect === item.href}
                        sx={{
                          mb: 1,
                          ...(pathDirect === item.href && {
                            color: "white",
                            backgroundColor: (theme) =>
                              `${theme.palette.primary.main}!important`,
                          }),
                        }}
                      >
                        <ListItemIcon
                          sx={{
                            ...(pathDirect === item.href && { color: "white" }),
                            fontSize: "22px",
                          }}
                        >
                          {item.icon}
                        </ListItemIcon>
                        <ListItemText onClick={onSidebarClose}>
                          {item.title}
                        </ListItemText>
                      </ListItem>
                    </NextLink>
                  </List>
                );
              }
            })}